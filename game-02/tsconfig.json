{
  "compilerOptions": {
    // Sets the module system to CommonJS, necessary for working with InversifyJS in a Node.js environment.
    "module": "commonjs",
    // Generates declaration (.d.ts) files to allow other projects to use exported types.
    "declaration": true,
    // Removes comments from the compiled code to reduce the output file size.
    "removeComments": true,
    // Enables the generation of metadata required for using decorators with InversifyJS.
    "emitDecoratorMetadata": true,
    // Allows interoperability with CommonJS modules, enabling the use of default imports.
    "esModuleInterop": true,
    // Enables the use of decorators, such as those used for dependency injection with InversifyJS.
    "experimentalDecorators": true,
    // Allows importing modules without default exports using default import syntax.
    "allowSyntheticDefaultImports": true,
    // Sets the ECMAScript version to ES2023 to support the latest JavaScript syntax.
    "target": "ES2023",
    // Generates source maps (.map files) to facilitate debugging in the browser or development environment.
    "sourceMap": true,
    // Specifies the output directory where compiled files will be generated.
    "outDir": "./dist",
    // Defines the base directory for resolving relative module names.
    "baseUrl": "./",
    // Enables incremental compilation to rebuild only changed files, improving performance.
    "incremental": true,
    // Skips type checking for declaration files to speed up the compilation process.
    "skipLibCheck": true,
    // Enables strict checks for null and undefined values, preventing runtime errors.
    "strictNullChecks": true,
    // Ensures consistent casing for file names, especially important on case-sensitive systems.
    "forceConsistentCasingInFileNames": true,
    // Allows variables with the 'any' type but recommends avoiding it for safer code.
    "noImplicitAny": false,
    // Disables strict type checking for 'bind', 'call', and 'apply' methods, useful when the context is unclear.
    "strictBindCallApply": false,
    // Suppresses warnings for fall-through cases in switch statements.
    "noFallthroughCasesInSwitch": false,
    // Enables stricter function type checking, particularly useful for dependency injection.
    "strictFunctionTypes": true,
    // Generates warnings if there are declared but unused local variables.
    "noUnusedLocals": true,
    // Generates warnings if there are unused function parameters.
    "noUnusedParameters": true,
    // Includes specific types for Node.js and reflect-metadata, required for runtime.
    "types": [
      "node",
      "reflect-metadata"
    ],
    // Defines the JavaScript libraries available in the runtime environment.
    "lib": [
      "ES2023"
    ]
  },
  // Specifies the root folders containing TypeScript files to be compiled.
  "include": [
    "src/**/*"
  ],
  // Excludes the node_modules and dist folders from the compilation process.
  "exclude": [
    "node_modules",
    "dist"
  ]
}